{"version":3,"sources":["serviceWorker.js","App/main.js"],"names":["Boolean","window","location","hostname","match","dayjs","require","$","Mailcheck","dataLayer","currency","document","ready","console","log","initForm","domains","topLevelDomains","on","val","run","email","suggested","suggestion","remove","full","insertAfter","click","html","empty","checkEmail","EN_PAGE_STATUS","status","pageJson","pageNumber","resolveEnPagePetitionStatus","hide","show","fadeOut","init","error","each","index","this","find","addClass","removeClass","test","ValidationArchitectureContactForm","prop","format","formData","FormData","Object","keys","forEach","el","e","v","type","value","append","name","fadeIn","fetch","attr","method","body","then","response","ok","json","statusText","catch","formLoading","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.4a5be336.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './main.scss'\nconst dayjs = require(\"dayjs\")\nconst ProgressBar = require('progressbar.js')\nconst {$, dataLayer, currency} = window\nconst Mailcheck = require('mailcheck');\n\n// let footer_main_page_url = `https://www.greenpeace.org/taiwan/?ref=2021-plastic_policy_petition`\n// let footer_donate_url = `https://supporter.ea.greenpeace.org/tw/s/donate?campaign=plastics&ref=2021-plastic_policy_petition-footer`\n// let footer_privacy_url = `https://www.greenpeace.org/taiwan/policies/privacy-and-cookies/?ref=2021-plastic_policy_petition`\n\n// window.directTo = function (type) {\n//     switch (type){\n//         case 'main':\n//             window.open(footer_main_page_url, '_blank');\n//             break\n//         case 'donate':\n//             window.open(footer_donate_url, '_blank');\n//             break\n//         case 'privacy':\n//             window.open(footer_privacy_url, '_blank');\n//             break\n//         default: \n//         window.open(footer_privacy_url, '_blank');\n//     }\n// }\n\n$(document).ready(function() {\n    console.log( \"ready!\" );\n    // initProgressBar();\n    // createYearOptions();\n    initForm();\n    checkEmail();\n    init();\n});\n\n/**\n * email suggestion / email correction\n */\nfunction checkEmail() {    \n\tlet domains = [\n\t\t\"me.com\",\n\t\t\"outlook.com\",\n\t\t\"netvigator.com\",\n\t\t\"cloud.com\",\n\t\t\"live.hk\",\n\t\t\"msn.com\",\n\t\t\"gmail.com\",\n\t\t\"hotmail.com\",\n\t\t\"ymail.com\",\n\t\t\"yahoo.com\",\n\t\t\"yahoo.com.tw\",\n\t\t\"yahoo.com.hk\"\n\t];\n\tlet topLevelDomains = [\"com\", \"net\", \"org\"];\n\n\t$(\"#email\").on('blur', function() {\n        console.log($(\"#email\").val())\n\t\tMailcheck.run({\n\t\t\temail: $(\"#email\").val(),\n\t\t\tdomains: domains, // optional\n\t\t\ttopLevelDomains: topLevelDomains, // optional\n\t\t\tsuggested: (suggestion) => {      \n                $('.email-suggestion').remove();\n                $(`<div class=\"email-suggestion\">您想輸入的是 <strong id=\"emailSuggestion\">${suggestion.full}</strong> 嗎？</div>`).insertAfter(\"#email\");\n                \n                $(\".email-suggestion\").click(function() {\n                    $(\"#email\").val($('#emailSuggestion').html());\n                    $('.email-suggestion').remove();\n                });\n\t\t\t},\n\t\t\tempty: () => {\n\t\t\t\t// this.emailSuggestion = null\n\t\t\t}\n\t\t});\n\t});\n}\n\nconst resolveEnPagePetitionStatus = () => {\n\tlet status = \"FRESH\";\n\t// console.log(window);\n\tif (window.pageJson.pageNumber === 2) {\n\t\tstatus = \"SUCC\"; // succ page\n\t} else {\n\t\tstatus = \"FRESH\"; // start page\n\t}\n\n\treturn status;\n};\n\nconst initForm = () => {\n    console.log('init form')\n\n    $(\"#architecture-contact-button\").click(function () {\n        var error = ValidationArchitectureContactForm();\n        console.log(error)\n        if (error) {\n\n            console.log(\"form passed\")\n            $('#mc-form [name=\"Email\"]').val($('#email').val())\n            $('#mc-form [name=\"LastName\"]').val($('#last-name').val());\n            $('#mc-form [name=\"FirstName\"]').val($('#first-name').val());\n            $('#mc-form [name=\"MobilePhone\"]').val($('#mobile').val());\n            $('#mc-form [name=\"OptIn\"]').val($('#optin').prop('checked'));\n            $('#mc-form [name=\"Birthdate\"]').val(dayjs($('#birth-year').val()).format(\"YYYY-MM-DD\"));\n            $('#mc-form [name=\"CampaignData1__c\"]').val($('#campaign-data-1').val());\n            $('#mc-form [name=\"CampaignData2__c\"]').val($('#campaign-data-2').val());\n            // collect values from form\n            let formData = new FormData();\n            Object.keys($(\"#mc-form input\")).forEach(function (el) {\n                let e = $(\"#mc-form input\")[el]\n                let v = null;\n                if (e.type === \"checkbox\") {\n                    // console.log(e)\n                    v = $('#optin').prop('checked');\n                } else {\n                    v = e.value;\n                }\n                formData.append(e.name, v);\n                console.log('use', e.name, v)\n            });\n            \n            // need testing\n            $(\".loading-cover\").fadeIn();\n            return fetch($(\"#mc-form\").attr(\"action\"), {\n                method: \"POST\",\n                body: formData,\n            }).then((response) => {\n                $(\".loading-cover\").fadeOut();\n                if (response.ok) {\n                    return response.json()\n                } \n                throw({\n                    ok: response.ok,\n                    status: response.status,\n                    statusText: response.statusText,\n                    type: response.type,\n                })\n            }).then((response) => {\n                if (response) {\n                    console.log(\"mc form posted\")\n                    console.log('response', response)\n                    window.pageJson.pageNumber = 2;\n                    $(\".page-1\").hide();\n                    $(\".page-2\").show();\n                    // footer_main_page_url += `_tkpage`;\n                    // footer_donate_url += `_tkpage`;\n                    // footer_privacy_url += `_tkpage`;\n                    // sendPetitionTracking('2021-plastic_policy');\n                }\n            }).catch((error) => {\n                console.log(error);\n                this.formLoading = false;\n                \n            });\n        }\n    });\n\n    function ValidationArchitectureContactForm() {\n        var error = true;\n        $('#architecturecontactform input[type=text]').each(function (index) {\n            if (index == 0 || index == 1) {\n                if ($(this).val() == null || $(this).val() == \"\") {\n                    $(\"#architecturecontactform\").find(\"input:eq(\" + index + \")\").addClass(\"required-error\");\n                    error = false;\n                }\n                else {\n                    $(\"#architecturecontactform\").find(\"input:eq(\" + index + \")\").removeClass(\"required-error\");\n                }\n            }\n            // email\n            else if (index == 2) {\n                if (!(/(.+)@(.+){2,}\\.(.+){2,}/.test($(this).val()))) {\n                    $(\"#architecturecontactform\").find(\"input:eq(\" + index + \")\").addClass(\"required-error\");\n                    error = false;\n                } else {\n                    $(\"#architecturecontactform\").find(\"input:eq(\" + index + \")\").removeClass(\"required-error\");\n                }\n            }\n\n        });\n        return error;\n    }\n\n}\n\nfunction init () {\n    \n    const EN_PAGE_STATUS = resolveEnPagePetitionStatus()\n\t// console.log(\"EN_PAGE_STATUS\", EN_PAGE_STATUS)\n\tif (EN_PAGE_STATUS===\"FRESH\") {\n    \n        $(\".page-2\").hide();\n\n\t} else if (EN_PAGE_STATUS===\"SUCC\") {\n        \n        $('.page-1').hide();\n        $('.page-2').show();\n        $(\"section\").hide();\n        $(\"#home\").show();\n    }\n    \n    $(\".loading-cover\").fadeOut();\n\n}\n\n/**\n * Send the tracking event to the ga\n * @param  {string} eventLabel The ga trakcing name, normally it will be the short campaign name. ex 2019-plastic_retailer\n * @param  {[type]} eventValue Could be empty\n * @return {[type]}            [description]\n */\nfunction sendPetitionTracking(eventLabel, eventValue) {\n\twindow.dataLayer = window.dataLayer || [];\n\n\twindow.dataLayer.push({\n\t    'event': 'gaEvent',\n\t    'eventCategory': 'petitions',\n\t    'eventAction': 'signup',\n\t    'eventLabel': eventLabel,\n\t    'eventValue' : eventValue\n\t});\n\n\twindow.dataLayer.push({\n\t    'event': 'fbqEvent',\n\t    'contentName': eventLabel,\n\t    'contentCategory': 'Petition Signup'\n\t});\n\n\twindow.uetq = window.uetq || [];  \n\twindow.uetq.push ('event', 'signup', {'event_category': 'petitions', 'event_label': eventLabel, 'event_value': 0});\n}"],"sourceRoot":""}